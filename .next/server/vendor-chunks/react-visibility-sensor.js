"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-visibility-sensor";
exports.ids = ["vendor-chunks/react-visibility-sensor"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-visibility-sensor/dist/visibility-sensor.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-visibility-sensor/dist/visibility-sensor.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n(function webpackUniversalModuleDefinition(root, factory) {\n    if (true) module.exports = factory(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"), __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"));\n    else {}\n})(void 0, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\n    return /******/ function(modules) {\n        /******/ // The module cache\n        /******/ var installedModules = {};\n        /******/ /******/ // The require function\n        /******/ function __nested_webpack_require_813__(moduleId) {\n            /******/ /******/ // Check if module is in cache\n            /******/ if (installedModules[moduleId]) {\n                /******/ return installedModules[moduleId].exports;\n            /******/ }\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = installedModules[moduleId] = {\n                /******/ i: moduleId,\n                /******/ l: false,\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ modules[moduleId].call(module1.exports, module1, module1.exports, __nested_webpack_require_813__);\n            /******/ /******/ // Flag the module as loaded\n            /******/ module1.l = true;\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /******/ /******/ // expose the modules object (__webpack_modules__)\n        /******/ __nested_webpack_require_813__.m = modules;\n        /******/ /******/ // expose the module cache\n        /******/ __nested_webpack_require_813__.c = installedModules;\n        /******/ /******/ // define getter function for harmony exports\n        /******/ __nested_webpack_require_813__.d = function(exports1, name, getter) {\n            /******/ if (!__nested_webpack_require_813__.o(exports1, name)) {\n                /******/ Object.defineProperty(exports1, name, {\n                    enumerable: true,\n                    get: getter\n                });\n            /******/ }\n        /******/ };\n        /******/ /******/ // define __esModule on exports\n        /******/ __nested_webpack_require_813__.r = function(exports1) {\n            /******/ if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\n                /******/ Object.defineProperty(exports1, Symbol.toStringTag, {\n                    value: \"Module\"\n                });\n            /******/ }\n            /******/ Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n        /******/ };\n        /******/ /******/ // create a fake namespace object\n        /******/ // mode & 1: value is a module id, require it\n        /******/ // mode & 2: merge all properties of value into the ns\n        /******/ // mode & 4: return value when already ns object\n        /******/ // mode & 8|1: behave like require\n        /******/ __nested_webpack_require_813__.t = function(value, mode) {\n            /******/ if (mode & 1) value = __nested_webpack_require_813__(value);\n            /******/ if (mode & 8) return value;\n            /******/ if (mode & 4 && typeof value === \"object\" && value && value.__esModule) return value;\n            /******/ var ns = Object.create(null);\n            /******/ __nested_webpack_require_813__.r(ns);\n            /******/ Object.defineProperty(ns, \"default\", {\n                enumerable: true,\n                value: value\n            });\n            /******/ if (mode & 2 && typeof value != \"string\") for(var key in value)__nested_webpack_require_813__.d(ns, key, (function(key) {\n                return value[key];\n            }).bind(null, key));\n            /******/ return ns;\n        /******/ };\n        /******/ /******/ // getDefaultExport function for compatibility with non-harmony modules\n        /******/ __nested_webpack_require_813__.n = function(module1) {\n            /******/ var getter = module1 && module1.__esModule ? /******/ function getDefault() {\n                return module1[\"default\"];\n            } : /******/ function getModuleExports() {\n                return module1;\n            };\n            /******/ __nested_webpack_require_813__.d(getter, \"a\", getter);\n            /******/ return getter;\n        /******/ };\n        /******/ /******/ // Object.prototype.hasOwnProperty.call\n        /******/ __nested_webpack_require_813__.o = function(object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        };\n        /******/ /******/ // __webpack_public_path__\n        /******/ __nested_webpack_require_813__.p = \"\";\n        /******/ /******/ /******/ // Load entry module and return exports\n        /******/ return __nested_webpack_require_813__(__nested_webpack_require_813__.s = 4);\n    /******/ }([\n        /* 0 */ /***/ function(module1, exports1, __nested_webpack_require_5027__) {\n            /**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ if (false) { var throwOnDirectAccess, ReactIs; } else {\n                // By explicitly using `prop-types` you are opting into new production behavior.\n                // http://fb.me/prop-types-in-prod\n                module1.exports = __nested_webpack_require_5027__(5)();\n            }\n        /***/ },\n        /* 1 */ /***/ function(module1, exports1) {\n            module1.exports = __WEBPACK_EXTERNAL_MODULE__1__;\n        /***/ },\n        /* 2 */ /***/ function(module1, exports1) {\n            module1.exports = __WEBPACK_EXTERNAL_MODULE__2__;\n        /***/ },\n        /* 3 */ /***/ function(module1, exports1) {\n            // Tell whether the rect is visible, given an offset\n            //\n            // return: boolean\n            module1.exports = function(offset, rect, containmentRect) {\n                var offsetDir = offset.direction;\n                var offsetVal = offset.value; // Rules for checking different kind of offsets. In example if the element is\n                // 90px below viewport and offsetTop is 100, it is considered visible.\n                switch(offsetDir){\n                    case \"top\":\n                        return containmentRect.top + offsetVal < rect.top && containmentRect.bottom > rect.bottom && containmentRect.left < rect.left && containmentRect.right > rect.right;\n                    case \"left\":\n                        return containmentRect.left + offsetVal < rect.left && containmentRect.bottom > rect.bottom && containmentRect.top < rect.top && containmentRect.right > rect.right;\n                    case \"bottom\":\n                        return containmentRect.bottom - offsetVal > rect.bottom && containmentRect.left < rect.left && containmentRect.right > rect.right && containmentRect.top < rect.top;\n                    case \"right\":\n                        return containmentRect.right - offsetVal > rect.right && containmentRect.left < rect.left && containmentRect.top < rect.top && containmentRect.bottom > rect.bottom;\n                }\n            };\n        /***/ },\n        /* 4 */ /***/ function(module1, __nested_webpack_exports__, __nested_webpack_require_7362__) {\n            \"use strict\";\n            __nested_webpack_require_7362__.r(__nested_webpack_exports__);\n            /* harmony export (binding) */ __nested_webpack_require_7362__.d(__nested_webpack_exports__, \"default\", function() {\n                return VisibilitySensor;\n            });\n            /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_7362__(1);\n            /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __nested_webpack_require_7362__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n            /* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_7362__(2);\n            /* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __nested_webpack_require_7362__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n            /* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_7362__(0);\n            /* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __nested_webpack_require_7362__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n            /* harmony import */ var _lib_is_visible_with_offset__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_7362__(3);\n            /* harmony import */ var _lib_is_visible_with_offset__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __nested_webpack_require_7362__.n(_lib_is_visible_with_offset__WEBPACK_IMPORTED_MODULE_3__);\n            function _typeof(obj) {\n                if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n                    _typeof = function _typeof(obj) {\n                        return typeof obj;\n                    };\n                } else {\n                    _typeof = function _typeof(obj) {\n                        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    };\n                }\n                return _typeof(obj);\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _defineProperties(target, props) {\n                for(var i = 0; i < props.length; i++){\n                    var descriptor = props[i];\n                    descriptor.enumerable = descriptor.enumerable || false;\n                    descriptor.configurable = true;\n                    if (\"value\" in descriptor) descriptor.writable = true;\n                    Object.defineProperty(target, descriptor.key, descriptor);\n                }\n            }\n            function _createClass(Constructor, protoProps, staticProps) {\n                if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                if (staticProps) _defineProperties(Constructor, staticProps);\n                return Constructor;\n            }\n            function _possibleConstructorReturn(self, call) {\n                if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n                    return call;\n                }\n                return _assertThisInitialized(self);\n            }\n            function _getPrototypeOf(o) {\n                _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n                    return o.__proto__ || Object.getPrototypeOf(o);\n                };\n                return _getPrototypeOf(o);\n            }\n            function _assertThisInitialized(self) {\n                if (self === void 0) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return self;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function\");\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) _setPrototypeOf(subClass, superClass);\n            }\n            function _setPrototypeOf(o, p) {\n                _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n                    o.__proto__ = p;\n                    return o;\n                };\n                return _setPrototypeOf(o, p);\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function normalizeRect(rect) {\n                if (rect.width === undefined) {\n                    rect.width = rect.right - rect.left;\n                }\n                if (rect.height === undefined) {\n                    rect.height = rect.bottom - rect.top;\n                }\n                return rect;\n            }\n            var VisibilitySensor = /*#__PURE__*/ function(_React$Component) {\n                _inherits(VisibilitySensor, _React$Component);\n                function VisibilitySensor(props) {\n                    var _this;\n                    _classCallCheck(this, VisibilitySensor);\n                    _this = _possibleConstructorReturn(this, _getPrototypeOf(VisibilitySensor).call(this, props));\n                    _defineProperty(_assertThisInitialized(_this), \"getContainer\", function() {\n                        return _this.props.containment || window;\n                    });\n                    _defineProperty(_assertThisInitialized(_this), \"addEventListener\", function(target, event, delay, throttle) {\n                        if (!_this.debounceCheck) {\n                            _this.debounceCheck = {};\n                        }\n                        var timeout;\n                        var func;\n                        var later = function later() {\n                            timeout = null;\n                            _this.check();\n                        };\n                        if (throttle > -1) {\n                            func = function func() {\n                                if (!timeout) {\n                                    timeout = setTimeout(later, throttle || 0);\n                                }\n                            };\n                        } else {\n                            func = function func() {\n                                clearTimeout(timeout);\n                                timeout = setTimeout(later, delay || 0);\n                            };\n                        }\n                        var info = {\n                            target: target,\n                            fn: func,\n                            getLastTimeout: function getLastTimeout() {\n                                return timeout;\n                            }\n                        };\n                        target.addEventListener(event, info.fn);\n                        _this.debounceCheck[event] = info;\n                    });\n                    _defineProperty(_assertThisInitialized(_this), \"startWatching\", function() {\n                        if (_this.debounceCheck || _this.interval) {\n                            return;\n                        }\n                        if (_this.props.intervalCheck) {\n                            _this.interval = setInterval(_this.check, _this.props.intervalDelay);\n                        }\n                        if (_this.props.scrollCheck) {\n                            _this.addEventListener(_this.getContainer(), \"scroll\", _this.props.scrollDelay, _this.props.scrollThrottle);\n                        }\n                        if (_this.props.resizeCheck) {\n                            _this.addEventListener(window, \"resize\", _this.props.resizeDelay, _this.props.resizeThrottle);\n                        } // if dont need delayed call, check on load ( before the first interval fires )\n                        !_this.props.delayedCall && _this.check();\n                    });\n                    _defineProperty(_assertThisInitialized(_this), \"stopWatching\", function() {\n                        if (_this.debounceCheck) {\n                            // clean up event listeners and their debounce callers\n                            for(var debounceEvent in _this.debounceCheck){\n                                if (_this.debounceCheck.hasOwnProperty(debounceEvent)) {\n                                    var debounceInfo = _this.debounceCheck[debounceEvent];\n                                    clearTimeout(debounceInfo.getLastTimeout());\n                                    debounceInfo.target.removeEventListener(debounceEvent, debounceInfo.fn);\n                                    _this.debounceCheck[debounceEvent] = null;\n                                }\n                            }\n                        }\n                        _this.debounceCheck = null;\n                        if (_this.interval) {\n                            _this.interval = clearInterval(_this.interval);\n                        }\n                    });\n                    _defineProperty(_assertThisInitialized(_this), \"check\", function() {\n                        var el = _this.node;\n                        var rect;\n                        var containmentRect; // if the component has rendered to null, dont update visibility\n                        if (!el) {\n                            return _this.state;\n                        }\n                        rect = normalizeRect(_this.roundRectDown(el.getBoundingClientRect()));\n                        if (_this.props.containment) {\n                            var containmentDOMRect = _this.props.containment.getBoundingClientRect();\n                            containmentRect = {\n                                top: containmentDOMRect.top,\n                                left: containmentDOMRect.left,\n                                bottom: containmentDOMRect.bottom,\n                                right: containmentDOMRect.right\n                            };\n                        } else {\n                            containmentRect = {\n                                top: 0,\n                                left: 0,\n                                bottom: window.innerHeight || document.documentElement.clientHeight,\n                                right: window.innerWidth || document.documentElement.clientWidth\n                            };\n                        } // Check if visibility is wanted via offset?\n                        var offset = _this.props.offset || {};\n                        var hasValidOffset = _typeof(offset) === \"object\";\n                        if (hasValidOffset) {\n                            containmentRect.top += offset.top || 0;\n                            containmentRect.left += offset.left || 0;\n                            containmentRect.bottom -= offset.bottom || 0;\n                            containmentRect.right -= offset.right || 0;\n                        }\n                        var visibilityRect = {\n                            top: rect.top >= containmentRect.top,\n                            left: rect.left >= containmentRect.left,\n                            bottom: rect.bottom <= containmentRect.bottom,\n                            right: rect.right <= containmentRect.right\n                        }; // https://github.com/joshwnj/react-visibility-sensor/pull/114\n                        var hasSize = rect.height > 0 && rect.width > 0;\n                        var isVisible = hasSize && visibilityRect.top && visibilityRect.left && visibilityRect.bottom && visibilityRect.right; // check for partial visibility\n                        if (hasSize && _this.props.partialVisibility) {\n                            var partialVisible = rect.top <= containmentRect.bottom && rect.bottom >= containmentRect.top && rect.left <= containmentRect.right && rect.right >= containmentRect.left; // account for partial visibility on a single edge\n                            if (typeof _this.props.partialVisibility === \"string\") {\n                                partialVisible = visibilityRect[_this.props.partialVisibility];\n                            } // if we have minimum top visibility set by props, lets check, if it meets the passed value\n                            // so if for instance element is at least 200px in viewport, then show it.\n                            isVisible = _this.props.minTopValue ? partialVisible && rect.top <= containmentRect.bottom - _this.props.minTopValue : partialVisible;\n                        } // Deprecated options for calculating offset.\n                        if (typeof offset.direction === \"string\" && typeof offset.value === \"number\") {\n                            console.warn(\"[notice] offset.direction and offset.value have been deprecated. They still work for now, but will be removed in next major version. Please upgrade to the new syntax: { %s: %d }\", offset.direction, offset.value);\n                            isVisible = _lib_is_visible_with_offset__WEBPACK_IMPORTED_MODULE_3___default()(offset, rect, containmentRect);\n                        }\n                        var state = _this.state; // notify the parent when the value changes\n                        if (_this.state.isVisible !== isVisible) {\n                            state = {\n                                isVisible: isVisible,\n                                visibilityRect: visibilityRect\n                            };\n                            _this.setState(state);\n                            if (_this.props.onChange) _this.props.onChange(isVisible);\n                        }\n                        return state;\n                    });\n                    _this.state = {\n                        isVisible: null,\n                        visibilityRect: {}\n                    };\n                    return _this;\n                }\n                _createClass(VisibilitySensor, [\n                    {\n                        key: \"componentDidMount\",\n                        value: function componentDidMount() {\n                            this.node = react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.findDOMNode(this);\n                            if (this.props.active) {\n                                this.startWatching();\n                            }\n                        }\n                    },\n                    {\n                        key: \"componentWillUnmount\",\n                        value: function componentWillUnmount() {\n                            this.stopWatching();\n                        }\n                    },\n                    {\n                        key: \"componentDidUpdate\",\n                        value: function componentDidUpdate(prevProps) {\n                            // re-register node in componentDidUpdate if children diffs [#103]\n                            this.node = react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.findDOMNode(this);\n                            if (this.props.active && !prevProps.active) {\n                                this.setState({\n                                    isVisible: null,\n                                    visibilityRect: {}\n                                });\n                                this.startWatching();\n                            } else if (!this.props.active) {\n                                this.stopWatching();\n                            }\n                        }\n                    },\n                    {\n                        key: \"roundRectDown\",\n                        value: function roundRectDown(rect) {\n                            return {\n                                top: Math.floor(rect.top),\n                                left: Math.floor(rect.left),\n                                bottom: Math.floor(rect.bottom),\n                                right: Math.floor(rect.right)\n                            };\n                        }\n                    },\n                    {\n                        key: \"render\",\n                        value: function render() {\n                            if (this.props.children instanceof Function) {\n                                return this.props.children({\n                                    isVisible: this.state.isVisible,\n                                    visibilityRect: this.state.visibilityRect\n                                });\n                            }\n                            return react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.only(this.props.children);\n                        }\n                    }\n                ]);\n                return VisibilitySensor;\n            }(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n            _defineProperty(VisibilitySensor, \"defaultProps\", {\n                active: true,\n                partialVisibility: false,\n                minTopValue: 0,\n                scrollCheck: false,\n                scrollDelay: 250,\n                scrollThrottle: -1,\n                resizeCheck: false,\n                resizeDelay: 250,\n                resizeThrottle: -1,\n                intervalCheck: true,\n                intervalDelay: 100,\n                delayedCall: false,\n                offset: {},\n                containment: null,\n                children: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null)\n            });\n            _defineProperty(VisibilitySensor, \"propTypes\", {\n                onChange: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n                active: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n                partialVisibility: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([\n                    prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n                    prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOf([\n                        \"top\",\n                        \"right\",\n                        \"bottom\",\n                        \"left\"\n                    ])\n                ]),\n                delayedCall: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n                offset: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([\n                    prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.shape({\n                        top: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                        left: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                        bottom: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                        right: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number\n                    }),\n                    prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.shape({\n                        direction: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOf([\n                            \"top\",\n                            \"right\",\n                            \"bottom\",\n                            \"left\"\n                        ]),\n                        value: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number\n                    })\n                ]),\n                scrollCheck: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n                scrollDelay: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                scrollThrottle: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                resizeCheck: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n                resizeDelay: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                resizeThrottle: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                intervalCheck: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n                intervalDelay: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n                containment:  false ? 0 : prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.any,\n                children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([\n                    prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.element,\n                    prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func\n                ]),\n                minTopValue: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number\n            });\n        /***/ },\n        /* 5 */ /***/ function(module1, exports1, __nested_webpack_require_28394__) {\n            \"use strict\";\n            /**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var ReactPropTypesSecret = __nested_webpack_require_28394__(6);\n            function emptyFunction() {}\n            function emptyFunctionWithReset() {}\n            emptyFunctionWithReset.resetWarningCache = emptyFunction;\n            module1.exports = function() {\n                function shim(props, propName, componentName, location, propFullName, secret) {\n                    if (secret === ReactPropTypesSecret) {\n                        // It is still safe when called from React.\n                        return;\n                    }\n                    var err = new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. \" + \"Use PropTypes.checkPropTypes() to call them. \" + \"Read more at http://fb.me/use-check-prop-types\");\n                    err.name = \"Invariant Violation\";\n                    throw err;\n                }\n                ;\n                shim.isRequired = shim;\n                function getShim() {\n                    return shim;\n                }\n                ;\n                // Important!\n                // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n                var ReactPropTypes = {\n                    array: shim,\n                    bool: shim,\n                    func: shim,\n                    number: shim,\n                    object: shim,\n                    string: shim,\n                    symbol: shim,\n                    any: shim,\n                    arrayOf: getShim,\n                    element: shim,\n                    elementType: shim,\n                    instanceOf: getShim,\n                    node: shim,\n                    objectOf: getShim,\n                    oneOf: getShim,\n                    oneOfType: getShim,\n                    shape: getShim,\n                    exact: getShim,\n                    checkPropTypes: emptyFunctionWithReset,\n                    resetWarningCache: emptyFunction\n                };\n                ReactPropTypes.PropTypes = ReactPropTypes;\n                return ReactPropTypes;\n            };\n        /***/ },\n        /* 6 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            /**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var ReactPropTypesSecret = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\n            module1.exports = ReactPropTypesSecret;\n        /***/ }\n    ]);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-visibility-sensor/dist/visibility-sensor.js\n");

/***/ })

};
;